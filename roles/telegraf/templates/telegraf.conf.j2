# Telegraf configuration

# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared plugins.

# Even if a plugin has no configuration, it must be declared in here
# to be active. Declaring a plugin means just specifying the name
# as a section with no variables. To deactivate a plugin, comment
# out the name and any variables.

# Use 'telegraf -config telegraf.toml -test' to see what metrics a config
# file would generate.

# One rule that plugins conform to is wherever a connection string
# can be passed, the values '' and 'localhost' are treated specially.
# They indicate to the plugin to use their own builtin configuration to
# connect to the local system.

# NOTE: The configuration has a few required parameters. They are marked
# with 'required'. Be sure to edit those to make this configuration work.

# Tags can also be specified via a normal map, but only one form at a time:
[tags]
{% if telegraf_tags is defined and telegraf_tags != None %}
{% for key, value in telegraf_tags.iteritems()%}
   {{ key }} = "{{ value }}"
{% endfor %}
{% endif %}

# Configuration for telegraf agent
[agent]
  # Default data collection interval for all plugins
  interval = "{{ telegraf_agent_interval }}"
  # Rounds collection interval to 'interval'
  # ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = {{ telegraf_round_interval }}

  # Default data flushing interval for all outputs. You should not set this below
  # interval. Maximum flush_interval will be flush_interval + flush_jitter
  flush_interval = "{{ telegraf_flush_interval }}"
  # Jitter the flush interval by a random amount. This is primarily to avoid
  # large write spikes for users running a large number of telegraf instances.
  # ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "{{ telegraf_flush_jitter }}"

  # Run telegraf in debug mode
  debug = {{ telegraf_debug }}
  # Override default hostname, if empty use os.Hostname()
{% if telegraf_hostname is defined and telegraf_hostname != None %}
  hostname = "{{ telegraf_hostname }}"
{% else %}
  hostname = "{{ ansible_hostname }}"
{% endif %}

###############################################################################
#                                  OUTPUTS                                    #
###############################################################################

[outputs]

# Configuration for influxdb server to send metrics to
[[outputs.influxdb]]
  # The full HTTP or UDP endpoint URL for your InfluxDB instance.
  # Multiple urls can be specified but it is assumed that they are part of the same
  # cluster, this means that only ONE of the urls will be written to each interval.
  # urls = ["udp://localhost:8089"] # UDP endpoint example
  urls = [ "{{ telegraf_influxdb_urls|join('","') }}" ] # required
  # The target database for metrics (telegraf will create it if not exists)
  database = "{{ telegraf_influxdb_database }}" # required
  # Precision of writes, valid values are n, u, ms, s, m, and h
  # note: using second precision greatly helps InfluxDB compression
  precision = "{{ telegraf_influxdb_precision }}"

  # Connection timeout (for the connection with InfluxDB), formatted as a string.
  # If not provided, will default to 0 (no timeout)
  timeout = "{{ telegraf_influxdb_timeout }}"
{% if telegraf_influxdb_username is defined and telegraf_influxdb_username != None %}
  username = "{{ telegraf_influxdb_username }}"
{% endif %}
{% if telegraf_influxdb_password is defined and telegraf_influxdb_password != None %}
  password = "{{ telegraf_influxdb_password }}"
{% endif %}
  # Set the user agent for HTTP POSTs (can be useful for log differentiation)
  user_agent = "{{ telegraf_influxdb_user_agent }}"
  # Set UDP payload size, defaults to InfluxDB UDP Client default (512 bytes)
  udp_payload = {{ telegraf_influxdb_udp_payload }}


###############################################################################
#                                  PLUGINS                                    #
###############################################################################

{% for plugin in telegraf_plugins_enabled %}
[[inputs.{{ plugin }}]]
{% if telegraf_plugin_settings.get(plugin) != None %}
{% for key, value in telegraf_plugin_settings.get(plugin).iteritems() %}
{% if value is mapping  %}
  [[plugins.{{ plugin }}.{{ key }}]]
{% for key, value in value.iteritems() %}
{% if value is mapping  %}
    [[plugins.{{ plugin }}.{{ key }}]]
{% else %}
{% if value is sequence and value is not string %}
      {{ key }} = [ "{{ value|join('", "') }}" ]
{% else %}
{% if value == "true" or value == "false" or value is number %}
      {{ key }} = {{ value }}
{% else %}
      {{ key }} = "{{ value }}"
{% endif %}
{% endif %}
{% endif %}
{% endfor %}
{% else %}
{% if value is sequence and value is not string %}
    {{ key }} = [ "{{ value|join('", "') }}" ]
{% else %}
{% if value == "true" or value == "false" or value is number %}
    {{ key }} = {{ value }}
{% else %}
    {{ key }} = "{{ value }}"
{% endif %}
{% endif %}
{% endif %}
{% endfor %}
{% endif %}

{% endfor %}

###############################################################################
#                              service PLUGINS                                #
###############################################################################
